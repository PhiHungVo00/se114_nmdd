[1mdiff --git a/backend_python/app/models/TotalDay.py b/backend_python/app/models/TotalDay.py[m
[1mindex 6fc6fcc..a344f7c 100644[m
[1m--- a/backend_python/app/models/TotalDay.py[m
[1m+++ b/backend_python/app/models/TotalDay.py[m
[36m@@ -6,13 +6,14 @@[m [mclass TotalDay(db.Model):[m
     __tablename__ = 'totalday'[m
     ID = db.Column(db.Integer, primary_key=True)[m
     totalMoney = db.Column(db.Float)[m
[32m+[m[32m    totalTickets = db.Column(db.Integer, default=0)[m
     date = db.Column(db.Integer)[m
     month = db.Column(db.Integer)[m
     year = db.Column(db.Integer)[m
[31m-    [m
 [m
[31m-    def __init__(self, total_money, date, month, year):[m
[32m+[m[32m    def __init__(self, total_money, total_tickets, date, month, year):[m
         self.totalMoney = total_money[m
[32m+[m[32m        self.totalTickets = total_tickets[m
         self.date = date[m
         self.month = month[m
         self.year = year[m
[36m@@ -22,6 +23,7 @@[m [mclass TotalDay(db.Model):[m
         return {[m
             'ID': self.ID,[m
             'TotalMoney': self.totalMoney,[m
[32m+[m[32m            'TotalTickets': self.totalTickets,[m
             'Date': self.date,[m
             'Month': self.month,[m
             'Year': self.year[m
[1mdiff --git a/backend_python/app/models/__pycache__/TotalDay.cpython-313.pyc b/backend_python/app/models/__pycache__/TotalDay.cpython-313.pyc[m
[1mindex 63c2eb6..e7e5e0d 100644[m
Binary files a/backend_python/app/models/__pycache__/TotalDay.cpython-313.pyc and b/backend_python/app/models/__pycache__/TotalDay.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/routes/__pycache__/firm_route.cpython-313.pyc b/backend_python/app/routes/__pycache__/firm_route.cpython-313.pyc[m
[1mindex b7d1cc1..15624d0 100644[m
Binary files a/backend_python/app/routes/__pycache__/firm_route.cpython-313.pyc and b/backend_python/app/routes/__pycache__/firm_route.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/routes/__pycache__/ticket_route.cpython-313.pyc b/backend_python/app/routes/__pycache__/ticket_route.cpython-313.pyc[m
[1mindex d2fa51b..dd37a11 100644[m
Binary files a/backend_python/app/routes/__pycache__/ticket_route.cpython-313.pyc and b/backend_python/app/routes/__pycache__/ticket_route.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/routes/__pycache__/totalDay_route.cpython-313.pyc b/backend_python/app/routes/__pycache__/totalDay_route.cpython-313.pyc[m
[1mindex 19a5fcd..665008a 100644[m
Binary files a/backend_python/app/routes/__pycache__/totalDay_route.cpython-313.pyc and b/backend_python/app/routes/__pycache__/totalDay_route.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/routes/firm_route.py b/backend_python/app/routes/firm_route.py[m
[1mindex 69887fd..1f38853 100644[m
[1m--- a/backend_python/app/routes/firm_route.py[m
[1m+++ b/backend_python/app/routes/firm_route.py[m
[36m@@ -3,7 +3,8 @@[m [mfrom app.services.firm_service import ([m
     get_all_firms,[m
     create_firm,[m
     update_firm,[m
[31m-    delete_firm[m
[32m+[m[32m    delete_firm,[m
[32m+[m[32m    list_firmIds_broadcast_today[m
 )[m
 from flask import Blueprint, jsonify, request[m
 from flask_jwt_extended import jwt_required, get_jwt_identity[m
[36m@@ -115,7 +116,8 @@[m [mdef update_firm_route(firm_id):[m
             description=data.get('description'),[m
             thumbnail=data.get('thumbnail'),[m
             rating=data.get('rating'),[m
[31m-            rating_count=data.get('rating_count')[m
[32m+[m[32m            rating_count=data.get('rating_count'),[m
[32m+[m[32m            runtime=data.get('runtime', 60)  # Default runtime is 60 seconds[m
         )[m
         return jsonify(firm.serialize()), 200[m
     except ValueError as e:[m
[36m@@ -131,12 +133,25 @@[m [mdef update_firm_route(firm_id):[m
 }[m
 [m
 '''[m
[31m-@FIRM_BLUEPRINT.route('/delete/<int:firm_id>', methods=['DELETE'])[m
[31m-def delete_firm_route(firm_id):[m
[32m+[m[32m@FIRM_BLUEPRINT.route('/delete/<int:id>', methods=['DELETE'])[m
[32m+[m[32mdef delete_firm_route(id):[m
     try:[m
[31m-        delete_firm(firm_id)[m
[32m+[m[32m        delete_firm(id)[m
         return jsonify({'message': 'Firm deleted successfully'}), 200[m
     except ValueError as e:[m
         return jsonify({'message': str(e)}), 400[m
     except Exception as e:[m
[31m-        return jsonify({'message': 'An error occurred while deleting the firm'}), 500[m
\ No newline at end of file[m
[32m+[m[32m        return jsonify({'message': f'An error occurred while deleting the firm: {e}'}), 500[m
[32m+[m[41m    [m
[32m+[m
[32m+[m
[32m+[m[32m# List firm IDs that have broadcasts today[m
[32m+[m[32m# # link: localhost:5000/api/firms/list_firmIds_broadcast_today[m
[32m+[m[32m@FIRM_BLUEPRINT.route('/list_firmIds_broadcast_today', methods=['GET'])[m
[32m+[m[32mdef list_firmIds_broadcast_today_route():[m
[32m+[m[32m    try:[m
[32m+[m[32m        firm_ids = list_firmIds_broadcast_today()[m
[32m+[m[32m        print(firm_ids)[m
[32m+[m[32m        return jsonify({'firm_ids': list(firm_ids)}), 200[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        return jsonify({'message': f'An error occurred: {e}'}), 500[m
\ No newline at end of file[m
[1mdiff --git a/backend_python/app/routes/ticket_route.py b/backend_python/app/routes/ticket_route.py[m
[1mindex 08c7f81..e714852 100644[m
[1m--- a/backend_python/app/routes/ticket_route.py[m
[1m+++ b/backend_python/app/routes/ticket_route.py[m
[36m@@ -58,6 +58,8 @@[m [mdef get_ticket(ticket_id):[m
 [m
 [m
 [m
[32m+[m
[32m+[m
 # Get all tickets use by admin[m
 # link: localhost:5000/api/tickets/get_all[m
 @TICKET_BLUEPRINT.route('/get_all', methods=['GET'])[m
[1mdiff --git a/backend_python/app/routes/totalDay_route.py b/backend_python/app/routes/totalDay_route.py[m
[1mindex acf5114..8f9af95 100644[m
[1m--- a/backend_python/app/routes/totalDay_route.py[m
[1m+++ b/backend_python/app/routes/totalDay_route.py[m
[36m@@ -1,7 +1,8 @@[m
 from app.services.totalDayly_service import ([m
     refresh_total_day,[m
     get_total_day_by_date,[m
[31m-    get_more_total_days[m
[32m+[m[32m    get_more_total_days,[m
[32m+[m[32m    create_sample_data[m
 )[m
 [m
 from flask import Blueprint, jsonify, request[m
[36m@@ -25,7 +26,7 @@[m [mdef refresh_total_day_route():[m
         return jsonify({'message': 'Day, month, and year are required'}), 400[m
     try:[m
         result = refresh_total_day(day, month, year)[m
[31m-        return jsonify({'message': 'Total day data refreshed successfully.'}), 200[m
[32m+[m[32m        return jsonify(result.serialize()), 200[m
     except ValueError as e:[m
         return jsonify({'message': str(e)}), 400[m
     except Exception as e:[m
[36m@@ -72,3 +73,17 @@[m [mdef get_more_total_days_route():[m
         return jsonify({'message': str(e)}), 400[m
     except Exception as e:[m
         return jsonify({'message': f'An error occurred while retrieving more total days: {str(e)}'}), 500[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# link: localhost:5000/api/total_day/create-sample-data[m
[32m+[m
[32m+[m[32m@TOTAL_DAY_BLUEPRINT.route('/create-sample-data', methods=['POST'])[m
[32m+[m[32m# @jwt_required()[m
[32m+[m[32mdef create_sample_data_route():[m
[32m+[m[32m    """Create sample data for total days."""[m
[32m+[m[32m    try:[m
[32m+[m[32m        create_sample_data()[m
[32m+[m[32m        return jsonify({'message': 'Sample data created successfully.'}), 200[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        return jsonify({'message': f'An error occurred while creating sample data: {str(e)}'}), 500[m
\ No newline at end of file[m
[1mdiff --git a/backend_python/app/services/__pycache__/firm_service.cpython-313.pyc b/backend_python/app/services/__pycache__/firm_service.cpython-313.pyc[m
[1mindex b3c199e..3addcee 100644[m
Binary files a/backend_python/app/services/__pycache__/firm_service.cpython-313.pyc and b/backend_python/app/services/__pycache__/firm_service.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/services/__pycache__/ticket_service.cpython-313.pyc b/backend_python/app/services/__pycache__/ticket_service.cpython-313.pyc[m
[1mindex b9ea5bd..bc97213 100644[m
Binary files a/backend_python/app/services/__pycache__/ticket_service.cpython-313.pyc and b/backend_python/app/services/__pycache__/ticket_service.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/services/__pycache__/totalDayly_service.cpython-313.pyc b/backend_python/app/services/__pycache__/totalDayly_service.cpython-313.pyc[m
[1mindex ecfc577..5cfb7af 100644[m
Binary files a/backend_python/app/services/__pycache__/totalDayly_service.cpython-313.pyc and b/backend_python/app/services/__pycache__/totalDayly_service.cpython-313.pyc differ
[1mdiff --git a/backend_python/app/services/firm_service.py b/backend_python/app/services/firm_service.py[m
[1mindex a457c3a..f980ede 100644[m
[1m--- a/backend_python/app/services/firm_service.py[m
[1m+++ b/backend_python/app/services/firm_service.py[m
[36m@@ -1,6 +1,8 @@[m
 from app.models.Firm import Firm[m
 from app.models.ImageFirm import ImageFirm[m
[32m+[m[32mfrom app.models.BroadCast import Broadcast[m
 from app import db[m
[32m+[m[32mfrom datetime import datetime[m
 [m
 [m
 [m
[36m@@ -56,7 +58,7 @@[m [mdef create_firm(name, description, thumbnail, start_date=None, end_date=None, ra[m
     return new_firm[m
 [m
 [m
[31m-def update_firm(firm_id, name=None, description=None, thumbnail=None, rating=None, rating_count=None):[m
[32m+[m[32mdef update_firm(firm_id, name=None, description=None, thumbnail=None, rating=None, rating_count=None, runtime=None):[m
     """Update an existing firm."""[m
     firm = get_firm_by_id(firm_id)[m
     if not firm:[m
[36m@@ -67,11 +69,13 @@[m [mdef update_firm(firm_id, name=None, description=None, thumbnail=None, rating=Non[m
     if description:[m
         firm.description = description[m
     if thumbnail:[m
[31m-        firm.thumbnail = thumbnail[m
[32m+[m[32m        firm.thumbnail_path = thumbnail[m
     if rating:[m
         firm.rating = rating[m
     if rating_count:[m
         firm.rating_count = rating_count[m
[32m+[m[32m    if runtime:[m
[32m+[m[32m        firm.runtime = runtime[m
 [m
     try:[m
         db.session.commit()[m
[36m@@ -87,8 +91,9 @@[m [mdef delete_firm(firm_id):[m
     firm = get_firm_by_id(firm_id)[m
     if not firm:[m
         raise ValueError("Firm not found")[m
[31m-    if firm.broadcasts:[m
[31m-        raise ValueError("Cannot delete firm with existing broadcasts")[m
[32m+[m[32m    broadcasts = Broadcast.query.filter(Broadcast.FirmID == firm.ID, Broadcast.is_delete == False).first()[m
[32m+[m[32m    if broadcasts:[m
[32m+[m[32m        raise ValueError("Cannot delete firm with active broadcasts")[m[41m   [m
 [m
     firm.is_delete = True[m
     try:[m
[36m@@ -98,3 +103,14 @@[m [mdef delete_firm(firm_id):[m
         raise ValueError(f"Error deleting firm: {str(e)}")[m
     [m
     return firm[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mdef list_firmIds_broadcast_today():[m
[32m+[m[32m    today = datetime.today().date()[m
[32m+[m[32m    broadcasts = Broadcast.query.filter(Broadcast.dateBroadcast == today, Broadcast.is_delete == False).all()[m
[32m+[m[32m    list_firmIds = set()[m
[32m+[m[32m    for broadcast in broadcasts:[m
[32m+[m[32m        if broadcast.FirmID:[m
[32m+[m[32m            list_firmIds.add(broadcast.FirmID)[m
[32m+[m[32m    return list_firmIds[m
\ No newline at end of file[m
[1mdiff --git a/backend_python/app/services/ticket_service.py b/backend_python/app/services/ticket_service.py[m
[1mindex b0f3751..ffd5c7e 100644[m
[1m--- a/backend_python/app/services/ticket_service.py[m
[1m+++ b/backend_python/app/services/ticket_service.py[m
[36m@@ -30,7 +30,7 @@[m [mdef create_ticket_service(user_id, broadcast_id, seat_id):[m
         db.session.commit()[m
         # Set the seat as bought[m
         set_seat_bought(seat_id)[m
[31m-        create_or_update_total_day(price, ticket.dateOrder.day, ticket.dateOrder.month, ticket.dateOrder.year)[m
[32m+[m[32m        create_or_update_total_day(price, 1, ticket.dateOrder.day, ticket.dateOrder.month, ticket.dateOrder.year)[m
         return get_ticket_detail_by_id_service(ticket.ID)[m
     except Exception as e:[m
         db.session.rollback()[m
[36m@@ -73,7 +73,7 @@[m [mdef delete_ticket_service(ticket_id):[m
         [m
         ticket.is_delete = True[m
         db.session.commit()[m
[31m-        create_or_update_total_day(-ticket.price, ticket.dateOrder.day, ticket.dateOrder.month, ticket.dateOrder.year)[m
[32m+[m[32m        create_or_update_total_day(-ticket.price, -1, ticket.dateOrder.day, ticket.dateOrder.month, ticket.dateOrder.year)[m
         set_seat_available(ticket.SeatID)[m
         return {"message": "Ticket deleted successfully"}, 200[m
     except Exception as e:[m
[1mdiff --git a/backend_python/app/services/totalDayly_service.py b/backend_python/app/services/totalDayly_service.py[m
[1mindex 0d0b3af..8f9cfac 100644[m
[1m--- a/backend_python/app/services/totalDayly_service.py[m
[1m+++ b/backend_python/app/services/totalDayly_service.py[m
[36m@@ -5,7 +5,7 @@[m [mfrom datetime import datetime[m
 from sqlalchemy import extract, func[m
 [m
 [m
[31m-def create_or_update_total_day(total_money, day, month, year):[m
[32m+[m[32mdef create_or_update_total_day(total_money, total_tickets, day, month, year):[m
     """[m
     Create or update a TotalDay record.[m
     If a record for the given date exists, it updates the totalMoney.[m
[36m@@ -18,9 +18,14 @@[m [mdef create_or_update_total_day(total_money, day, month, year):[m
         if total_day:[m
             # Update existing record[m
             total_day.totalMoney += total_money[m
[32m+[m[32m            total_day.totalTickets += total_tickets[m
[32m+[m[32m            if total_day.totalMoney < 0:[m
[32m+[m[32m                total_day.totalMoney = 0[m
[32m+[m[32m            if total_day.totalTickets < 0:[m
[32m+[m[32m                total_day.totalTickets = 0[m
         else:[m
             # Create new record[m
[31m-            total_day = TotalDay(total_money=total_money, date=day, month=month, year=year)[m
[32m+[m[32m            total_day = TotalDay(total_money=total_money, total_tickets=total_tickets, date=day, month=month, year=year)[m
             db.session.add(total_day)[m
         [m
         db.session.commit()[m
[36m@@ -39,7 +44,7 @@[m [mdef refresh_total_day(day=None, month=None, year=None):[m
     try:[m
         totalDay = TotalDay.query.filter_by(date=day, month=month, year=year).first()[m
         if not totalDay:[m
[31m-            totalDay = TotalDay(0, date=day, month=month, year=year)[m
[32m+[m[32m            totalDay = TotalDay(0, 0, date=day, month=month, year=year)[m
             db.session.add(totalDay)[m
         totalDay.totalMoney = db.session.query(db.func.sum(Ticket.price)).filter([m
             extract('day', Ticket.dateOrder) == day, [m
[36m@@ -49,6 +54,7 @@[m [mdef refresh_total_day(day=None, month=None, year=None):[m
         ).scalar() or 0[m
 [m
         db.session.commit()[m
[32m+[m[32m        return totalDay[m
 [m
     except Exception as e:[m
         db.session.rollback()[m
[36m@@ -82,3 +88,24 @@[m [mdef get_more_total_days(start_date, end_date):[m
 [m
 [m
 [m
[32m+[m
[32m+[m
[32m+[m[32mdef create_sample_data():[m
[32m+[m[32m    '''[m
[32m+[m[32m       các ngày từ tháng 5 đến tháng 7 đều có dữ liệu và total =0[m
[32m+[m[32m    '''[m
[32m+[m[32m    try:[m
[32m+[m[32m        for month in range(5, 8):[m
[32m+[m[32m            for day in range(1, 32):[m
[32m+[m[32m                if month == 5 and day > 31:[m
[32m+[m[32m                    break[m
[32m+[m[32m                if month == 6 and day > 30:[m
[32m+[m[32m                    break[m
[32m+[m[32m                if month == 7 and day > 31:[m
[32m+[m[32m                    break[m
[32m+[m[32m                create_or_update_total_day(total_money=0, total_tickets=0, day=day, month=month, year=2023)[m
[32m+[m[32m        print("Sample data created successfully.")[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        db.session.rollback()[m
[32m+[m[32m        print(f"An error occurred while creating sample data: {str(e)}")[m
[32m+[m[41m   [m
\ No newline at end of file[m
[1mdiff --git a/frontend_java/app/src/main/AndroidManifest.xml b/frontend_java/app/src/main/AndroidManifest.xml[m
[1mindex f5cedc2..0b40f31 100644[m
[1m--- a/frontend_java/app/src/main/AndroidManifest.xml[m
[1m+++ b/frontend_java/app/src/main/AndroidManifest.xml[m
[36m@@ -106,6 +106,9 @@[m
         <activity[m
             android:name=".activities.AdminActivityCreateNewFirm"[m
             android:exported="false" />[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".activities.AdminActivityUpdateFirm"[m
[32m+[m[32m            android:exported="false" />[m
     </application>[m
 [m
 </manifest>[m
\ No newline at end of file[m
[1mdiff --git a/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityCreateNewFirm.java b/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityCreateNewFirm.java[m
[1mindex 3f67707..1fce7a1 100644[m
[1m--- a/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityCreateNewFirm.java[m
[1m+++ b/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityCreateNewFirm.java[m
[36m@@ -93,7 +93,6 @@[m [mpublic class AdminActivityCreateNewFirm extends AppCompatActivity {[m
                         Glide.with(this)[m
                                 .load(uri)[m
                                 .into(imageThumbnail);[m
[31m-//                        uploadToCloudinary(uri); // Upload thumbnail image to Cloudinary[m
                         thumbnailImageUri = uri; // Save the thumbnail image URI[m
                     }[m
                 }[m
[36m@@ -103,7 +102,6 @@[m [mpublic class AdminActivityCreateNewFirm extends AppCompatActivity {[m
                 uri -> {[m
                     if (uri != null) {[m
                         coverImageAdapter.addImage(uri);[m
[31m-//                        uploadToCloudinary(uri);[m
                     }[m
                 }[m
         );[m
[36m@@ -409,6 +407,4 @@[m [mpublic class AdminActivityCreateNewFirm extends AppCompatActivity {[m
 [m
         return  true;[m
     }[m
[31m-[m
[31m-[m
 }[m
[1mdiff --git a/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityEditRoom.java b/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityEditRoom.java[m
[1mindex b0f8083..91ee266 100644[m
[1m--- a/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityEditRoom.java[m
[1m+++ b/frontend_java/app/src/main/java/com/example/myapplication/activities/AdminActivityEditRoom.java[m
[36m@@ -6,6 +6,7 @@[m [mimport android.os.Bundle;[m
 import android.widget.Button;[m
 import android.widget.EditText;[m
 import android.widget.TextView;[m
[32m+[m[32mimport android.widget.Toast;[m
 [m
 import androidx.appcompat.app.AppCompatActivity;[m
 [m
[36m@@ -72,6 +73,7 @@[m [mpublic class AdminActivityEditRoom extends AppCompatActivity {[m
             if (roomName.isEmpty() || seatsStr.isEmpty()) {[m
                 editRoomName.setError("Room name is required");[m
                 editSeats.setError("Seats are required");[m
[32m+[m[32m                Toast.makeText(this ,"Please fill in all fields", Toast.LENGTH_SHORT).show();[m
                 return;[m
             }[m
             int seats = Integer.parseInt(seatsStr);[m
[36m@@ -96,12 +98,13 @@[m [mpublic class AdminActivityEditRoom extends AppCompatActivity {[m
                         finish();[m
                     } else {[m
                         /